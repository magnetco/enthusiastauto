<story-context id="bmad/bmm/workflows/4-implementation/story-context/template" v="1.0">
  <metadata>
    <epicId>1</epicId>
    <storyId>1.10</storyId>
    <title>ShadCN Component Integration & Design System</title>
    <status>Ready</status>
    <generatedAt>2025-10-16</generatedAt>
    <generator>BMAD Story Context Workflow</generator>
    <sourceStoryPath>docs/stories/story-1.10.md</sourceStoryPath>
  </metadata>

  <story>
    <asA>user interacting with the site</asA>
    <iWant>a modern, consistent, and accessible interface</iWant>
    <soThat>my experience is delightful and intuitive</soThat>
    <tasks>
      Task 1: Audit existing component usage and identify gaps (AC: #1, #6)
      Task 2: Implement comprehensive design token system (AC: #2)
      Task 3: Standardize button styles across the site (AC: #1, #3)
      Task 4: Standardize form inputs with ShadCN patterns (AC: #6)
      Task 5: Enhance modal and overlay components (AC: #1, #3)
      Task 6: Implement comprehensive loading states (AC: #5)
      Task 7: Implement dark mode foundation (AC: #8)
      Task 8: Visual design polish and consistency (AC: #7)
      Task 9: Accessibility testing and validation (AC: #4)
      Task 10: Documentation and testing (AC: #2, #4)
    </tasks>
  </story>

  <acceptanceCriteria>
    1. ShadCN components are used consistently for all interactive UI elements: buttons, cards, dropdowns (selects), modals (dialogs), toasts (notifications)
    2. Design system is documented with consistent color palette, typography, and spacing throughout the site
    3. All interactive elements have proper hover/focus/active states following accessibility best practices
    4. Components implement WCAG 2.1 AA accessibility standards (ARIA labels, keyboard navigation, color contrast)
    5. Loading skeletons are used for asynchronous content (product fetching, API calls)
    6. Form inputs are styled consistently using ShadCN patterns (Input, Select, Checkbox)
    7. Visual design quality meets or exceeds enthusiastauto.com standards with modern, premium aesthetic
    8. Dark mode support implemented (optional for MVP but foundation prepared)
  </acceptanceCriteria>

  <artifacts>
    <docs>
      <doc path="docs/PRD.md" title="Product Requirements Document" section="Non-Functional Requirements" snippet="NFR003: ShadCN UI library integrated for consistent component patterns. NFR004: Visual design quality exceeds enthusiastauto.com with premium aesthetic, modern layout, accessible interfaces." />
      <doc path="docs/epic-stories.md" title="Epic Breakdown" section="Story 10" snippet="ShadCN Component Integration & Design System - Deliver superior user experience with modern design system. ShadCN components for buttons, cards, dropdowns, modals, toasts. Consistent color palette and typography. Dark mode support." />
      <doc path="docs/ux-specification.md" title="UX Specification" section="Section 4: Component Library" snippet="Complete ShadCN UI component library specifications including Button, Card, Input, Select, Dialog, Badge, Skeleton, Tooltip, Dropdown Menu, Accordion. Each component has detailed usage patterns, variants, states, and accessibility requirements." />
      <doc path="docs/ux-specification.md" title="UX Specification" section="Section 5: Visual Design Foundation" snippet="Brand colors: brand-red #D12026, brand-navy #292664, brand-blue #529BCA, brand-dark #141C27. Typography: Inter (body), Outfit (headings). Spacing scale: 4px base unit. Border radius, shadows, transitions defined." />
      <doc path="docs/ux-specification.md" title="UX Specification" section="Section 7: Accessibility" snippet="WCAG 2.1 AA compliance requirements. Color contrast minimums (4.5:1 text, 3:1 UI). Keyboard navigation patterns. Screen reader support with semantic HTML and ARIA. Touch targets 44x44px minimum. Reduced motion support." />
      <doc path="docs/ux-specification.md" title="UX Specification" section="Section 8: Interaction and Motion" snippet="Animation timing: fast 150ms, base 200ms, slow 300ms. Easing curves: cubic-bezier(0.4, 0, 0.2, 1). Button states: hover (shadow elevation), active (scale down), focus (visible ring). Loading states with spinners and skeletons." />
      <doc path="docs/architecture.md" title="Architecture Documentation" section="Technology Stack - Frontend" snippet="Tailwind CSS 4.0.14 utility-first styling, Headless UI 2.2.0 unstyled accessible components, Heroicons 2.2.0 icons, Geist 1.3.1 font, Sonner 2.0.1 toast notifications. Next.js 15 with React 19 Server Components." />
      <doc path="docs/stories/story-1.1.md" title="Story 1.1 Reference" section="Implementation Notes" snippet="ShadCN UI initialized with components.json. Card, Badge, Skeleton, Button components installed via npx shadcn-ui@latest add. TypeScript strict mode enabled. Tailwind CSS configured. Server Components pattern established." />
    </docs>
    <code>
      <artifact path="components/ui/button.tsx" kind="component" symbol="Button" lines="1-50" reason="Existing ShadCN Button component - needs brand color variants (primary brand-red, secondary brand-blue) and enhanced states" />
      <artifact path="components/ui/card.tsx" kind="component" symbol="Card" lines="1-30" reason="Existing ShadCN Card component - verify consistent usage across site" />
      <artifact path="components/ui/badge.tsx" kind="component" symbol="Badge" lines="1-40" reason="Existing ShadCN Badge component - ensure brand color variants" />
      <artifact path="components/ui/skeleton.tsx" kind="component" symbol="Skeleton" lines="1-20" reason="Existing ShadCN Skeleton component - expand usage for loading states" />
      <artifact path="components/filter-panel.tsx" kind="component" symbol="FilterPanel" lines="1-150" reason="Custom filter component - migrate to ShadCN Accordion and Checkbox components" />
      <artifact path="components/vehicle-selector.tsx" kind="component" symbol="VehicleSelector" lines="1-200" reason="Custom vehicle selector - migrate to ShadCN Select component for dropdowns" />
      <artifact path="components/layout/navbar/search.tsx" kind="component" symbol="Search" lines="1-80" reason="Custom search bar - migrate to ShadCN Input component" />
      <artifact path="components/cart/modal.tsx" kind="component" symbol="CartModal" lines="1-150" reason="Existing cart modal using HeadlessUI Dialog - verify if migration to ShadCN Dialog needed" />
      <artifact path="components/product-card.tsx" kind="component" symbol="ProductCard" lines="1-120" reason="Product card component - ensure consistent button styles and hover states" />
      <artifact path="components/product-grid.tsx" kind="component" symbol="ProductGrid" lines="1-80" reason="Product grid container - verify skeleton loader usage" />
      <artifact path="tailwind.config.ts" kind="config" symbol="tailwindConfig" lines="1-100" reason="Tailwind configuration - add comprehensive design token system (brand colors, typography, spacing, shadows)" />
      <artifact path="app/globals.css" kind="stylesheet" symbol="global-styles" lines="1-50" reason="Global styles - add CSS variables for theme colors, dark mode support" />
      <artifact path="components.json" kind="config" symbol="shadcn-config" lines="1-30" reason="ShadCN configuration - verify component installation settings" />
      <artifact path="app/layout.tsx" kind="page" symbol="RootLayout" lines="1-50" reason="Root layout - may need theme provider wrapper for dark mode" />
    </code>
    <dependencies>
      <npm>
        <package name="next" version="15.3.0" />
        <package name="react" version="19.0.0" />
        <package name="tailwindcss" version="4.0.14" />
        <package name="typescript" version="5.8.2" />
        <package name="@headlessui/react" version="2.2.0" />
        <package name="@heroicons/react" version="2.2.0" />
        <package name="class-variance-authority" version="latest" note="CVA for component variants" />
        <package name="clsx" version="latest" note="Utility for classNames" />
        <package name="tailwind-merge" version="latest" note="Merge Tailwind classes" />
        <package name="lucide-react" version="latest" note="Icon library for ShadCN" />
        <package name="@radix-ui/react-dialog" version="latest" note="Dialog primitive for ShadCN" />
        <package name="@radix-ui/react-select" version="latest" note="Select primitive for ShadCN" />
        <package name="@radix-ui/react-checkbox" version="latest" note="Checkbox primitive for ShadCN" />
        <package name="@radix-ui/react-tooltip" version="latest" note="Tooltip primitive for ShadCN" />
        <package name="@radix-ui/react-dropdown-menu" version="latest" note="Dropdown menu primitive" />
        <package name="@radix-ui/react-accordion" version="latest" note="Accordion primitive for ShadCN" />
        <package name="sonner" version="2.0.1" note="Toast notifications already installed" />
      </npm>
    </dependencies>
  </artifacts>

  <constraints>
    1. Next.js 15 App Router with React 19 Server Components - use 'use client' only when necessary for interactive components
    2. ShadCN UI copy-paste pattern - components live in /components/ui/, NOT npm dependencies (except Radix UI primitives)
    3. Install ShadCN components via CLI: npx shadcn-ui@latest add [component-name]
    4. TypeScript strict mode enabled - all components must be fully typed
    5. Tailwind CSS 4.0 - use utility classes, avoid custom CSS when possible
    6. Design tokens MUST be configured in tailwind.config.js (colors, typography, spacing, shadows, transitions)
    7. Brand colors are FIXED: brand-red #D12026, brand-navy #292664, brand-blue #529BCA, brand-dark #141C27
    8. WCAG 2.1 AA compliance MANDATORY - 4.5:1 text contrast, 3:1 UI contrast, 44x44px touch targets, keyboard navigation
    9. All interactive elements MUST have hover/focus/active states with proper visual indicators
    10. Dark mode foundation required - CSS variables for theme colors, Tailwind dark: classes, localStorage persistence
    11. Accessibility CRITICAL - semantic HTML, proper heading hierarchy, ARIA labels, screen reader support
    12. Lighthouse accessibility score target: 95+ (must run audit and fix all critical issues)
    13. Responsive design - test at 320px, 640px, 768px, 1024px, 1280px breakpoints
    14. Performance - skeleton loaders prevent CLS, smooth transitions 150-300ms, reduced motion support
    15. DO NOT remove or break existing functionality - enhance and standardize only
    16. Prettier formatting MUST pass - run npm run prettier:check before completion
    17. TypeScript build MUST pass - run npm run build to validate
    18. Component documentation REQUIRED - create docs/design-system.md and docs/component-library.md
    19. Button variants MUST include: primary (brand-red), secondary (brand-blue), outline, ghost, link
    20. Form inputs MUST follow ShadCN patterns with proper label associations and error states
  </constraints>

  <interfaces>
    <interface name="Button Component API" kind="component" signature="Button({ variant, size, className, children, ...props })" path="components/ui/button.tsx" note="Variant: primary | secondary | outline | ghost | link. Size: sm | md | lg. Must support loading state with spinner." />
    <interface name="Input Component API" kind="component" signature="Input({ type, className, error, ...props })" path="components/ui/input.tsx" note="Standard form input with error states, focus ring, proper label association via htmlFor/id." />
    <interface name="Select Component API" kind="component" signature="Select({ options, value, onChange, placeholder, className })" path="components/ui/select.tsx" note="Radix UI Select with ShadCN styling. Used for VehicleSelector Year/Model dropdowns." />
    <interface name="Checkbox Component API" kind="component" signature="Checkbox({ checked, onCheckedChange, label, className })" path="components/ui/checkbox.tsx" note="Radix UI Checkbox with ShadCN styling. Used for FilterPanel filter options." />
    <interface name="Dialog Component API" kind="component" signature="Dialog({ open, onOpenChange, children })" path="components/ui/dialog.tsx" note="Radix UI Dialog with ShadCN styling. Modal with backdrop, focus trap, ESC to close." />
    <interface name="Tooltip Component API" kind="component" signature="Tooltip({ content, children, side })" path="components/ui/tooltip.tsx" note="Radix UI Tooltip with ShadCN styling. Keyboard accessible, proper ARIA." />
    <interface name="Accordion Component API" kind="component" signature="Accordion({ type, children })" path="components/ui/accordion.tsx" note="Radix UI Accordion with ShadCN styling. Type: single | multiple. Used for FilterPanel." />
    <interface name="Tailwind Design Tokens" kind="config" signature="theme.extend.colors, theme.extend.fontFamily, theme.extend.spacing" path="tailwind.config.ts" note="Configure brand colors, typography (Inter/Outfit), spacing scale, border radius, shadows, transitions." />
    <interface name="Dark Mode Theme Provider" kind="component" signature="ThemeProvider({ children, defaultTheme, storageKey })" path="components/theme-provider.tsx" note="Context provider for dark mode. Manages theme state, localStorage persistence, CSS variable updates." />
    <interface name="CSS Variables for Themes" kind="stylesheet" signature=":root { --color-primary: ...; } .dark { --color-primary: ...; }" path="app/globals.css" note="CSS custom properties for light/dark theme colors. Used by Tailwind and components." />
  </interfaces>

  <tests>
    <standards>
      Testing framework: Manual testing and Lighthouse audits. Prettier formatting validation via npm run prettier:check. TypeScript build validation via npm run build. Lighthouse accessibility audit target: 95+ score. axe DevTools for automated accessibility scanning. Keyboard navigation testing (Tab, Shift+Tab, Enter, Space, ESC). Screen reader testing with VoiceOver (macOS) or NVDA (Windows). Color contrast verification (minimum 4.5:1 text, 3:1 UI). Browser zoom testing at 200% (no horizontal scroll). Cross-browser testing: Chrome, Safari, Firefox, Edge. Responsive testing: 320px, 640px, 768px, 1024px, 1280px breakpoints.
    </standards>
    <locations>
      Manual testing across all pages: app/page.tsx (homepage), app/search/page.tsx (search results), app/product/[handle]/page.tsx (product detail). Component testing in isolation: components/ui/* (all ShadCN components). Accessibility audit on complete user flows: product discovery → filter → detail → add to cart → checkout.
    </locations>
    <ideas>
      AC#1 (ShadCN components for all UI): Verify Button, Card, Badge, Dialog, Select, Input, Checkbox, Tooltip, Dropdown Menu, Accordion installed and used consistently. Test toast notifications with Sonner library.
      AC#2 (Design system documented): Create docs/design-system.md with color palette (with hex codes), typography scale (font families, sizes, weights, line heights), spacing tokens (space-1 to space-16), border radius values, shadow elevations, transition timings. Create docs/component-library.md with usage examples for each ShadCN component.
      AC#3 (Hover/focus/active states): Test all buttons have hover (shadow elevation), focus (2px brand-blue ring with 2px offset), active (scale 0.98) states. Verify links have hover underline. Test form inputs have focus ring. Check cards have hover elevation.
      AC#4 (WCAG 2.1 AA compliance): Run Lighthouse accessibility audit (target 95+). Run axe DevTools scan (fix all critical/serious). Test keyboard navigation (Tab to all interactive elements, Enter/Space to activate, ESC to close modals). Test VoiceOver/NVDA screen reader (semantic HTML, ARIA labels, proper heading hierarchy). Verify color contrast (use Contrast Checker tool). Test 44x44px minimum touch targets on mobile. Test at 200% browser zoom (no horizontal scroll).
      AC#5 (Loading skeletons): Verify ProductCard has Skeleton loader during fetch. Test search results show skeleton grid. Verify filter panels show skeleton during load. Test cart shows skeleton during operations. Ensure skeletons maintain layout (no CLS).
      AC#6 (Form inputs with ShadCN): Test search bar uses Input component with clear button. Verify VehicleSelector uses Select component for Year/Model dropdowns. Test FilterPanel uses Checkbox component. Verify proper label associations (htmlFor/id). Test error states display properly. Verify keyboard navigation works (Tab between fields, Space to check boxes).
      AC#7 (Visual design exceeds enthusiastauto.com): Manual QA comparison to enthusiastauto.com main site. Verify premium aesthetic: consistent spacing, modern typography, smooth transitions, polished hover effects. Test across all pages for consistency. Verify brand colors used correctly throughout.
      AC#8 (Dark mode foundation): Verify CSS variables for theme colors in app/globals.css. Test Tailwind dark: classes work. Verify theme toggle component (sun/moon icon) in header. Test localStorage persistence (theme preference saved). Verify all components support dark mode variants. Test dark mode color contrast meets WCAG AA.
      Task 1 (Audit components): List all existing ShadCN components (Card, Badge, Skeleton, Button). Identify missing components (Dialog, Select, Input, Checkbox, Tooltip, Dropdown Menu, Accordion). Install missing components via npx shadcn-ui@latest add. Review FilterPanel, VehicleSelector for migration opportunities.
      Task 2 (Design tokens): Update tailwind.config.js with brand colors (red/navy/blue/dark), semantic colors (success/warning/error), primary color scale (50-900), typography (Inter/Outfit), spacing scale, border radius, shadows, transitions. Verify tokens used throughout site.
      Task 3 (Standardize buttons): Add brand color variants to Button component (primary: bg-brand-red, secondary: bg-brand-blue). Implement all button states (hover/active/focus/loading/disabled). Replace custom buttons site-wide. Verify 44px touch targets mobile. Test keyboard navigation.
      Task 4 (Form inputs): Create Input component with brand styling. Update search bar. Migrate VehicleSelector to Select component. Update FilterPanel to Checkbox component. Add label associations and error states. Test accessibility.
      Task 5 (Modals/overlays): Verify cart modal implementation (HeadlessUI vs ShadCN Dialog). Implement consistent backdrop styling. Add focus management (trap focus, restore on close). Support keyboard controls (ESC to close, Tab navigation). Add smooth animations.
      Task 6 (Loading states): Expand Skeleton usage (ProductGrid, search, filters, cart). Add shimmer animation. Create button loading states with spinners. Implement page transition indicators (optional). Ensure layout stability (no CLS).
      Task 7 (Dark mode): Set up CSS variables for light/dark colors. Configure Tailwind dark mode (class strategy). Update all components with dark: variants. Create theme toggle component. Persist to localStorage. Test color contrast.
      Task 8 (Visual polish): Review all pages for consistency (spacing, colors, typography). Standardize card shadows and border radius. Ensure consistent hover effects (elevation, transitions). Add smooth transitions 150-300ms. Implement empty states with icons. Polish icon usage (Lucide icons, consistent size/color).
      Task 9 (Accessibility testing): Run Lighthouse audit (95+ target). Run axe DevTools (fix critical/serious). Test keyboard navigation. Test VoiceOver/NVDA. Verify color contrast. Test 200% zoom. Validate ARIA labels/roles.
      Task 10 (Documentation): Create docs/component-library.md with usage examples. Create docs/design-system.md with color palette, typography, spacing tokens. Add accessibility testing checklist. Test responsive behavior all breakpoints. Run Prettier check. Run TypeScript build. Manual QA comparison to enthusiastauto.com.
    </ideas>
  </tests>
</story-context>
